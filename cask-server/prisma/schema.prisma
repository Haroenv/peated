generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id          Int     @id @default(autoincrement())
    email       String  @unique
    displayName String?

    checkins   Checkin[]
    identities Identity[]
}

enum IdentityProvider {
    google
}

model Identity {
    id Int @id @default(autoincrement())

    provider   IdentityProvider
    externalId String

    userId Int
    user   User @relation(fields: [userId], references: [id])

    @@unique([provider, externalId])
}

enum Category {
    blend
    blended_grain
    blended_malt
    blended_scotch
    single_grain
    single_malt
    spirit
}

// e.g. Hibiki, Glenlivet
model Brand {
    id   Int    @id @default(autoincrement())
    name String @unique

    country String
    region  String?

    bottles Bottle[]
}

model Distiller {
    id   Int    @id @default(autoincrement())
    name String @unique

    country String
    region  String?

    bottles Bottle[]
}

// DisplayName is: [Name] [Series]
// Distiller=Hibiki Brand=Hibiki, Name=Hibiki 12, Series=None, DisplayName=Hibiki 12
// Distiller=Macallan, Brand=Blended Malt, Series=Mythic Journey, DisplayName=Macallan Blended Malt Mythic Journey

// Bottles are unique to their (name, brand, series), and the rest of the attributes are considered optional facts
model Bottle {
    id      Int     @id @default(autoincrement())
    name    String
    brandId Int
    brand   Brand   @relation(fields: [brandId], references: [id])
    series  String?

    distillerId Int?
    distiller   Distiller? @relation(fields: [distillerId], references: [id])

    category  Category?
    abv       Float?
    statedAge Int?

    checkins Checkin[]

    @@unique([name, brandId, series])
}

model Checkin {
    id       Int    @id @default(autoincrement())
    bottleId Int
    bottle   Bottle @relation(fields: [bottleId], references: [id])
    // location

    tastingNotes String?
    tags         String[]
    // friends      String[]
    rating       Float
    userId       Int
    user         User     @relation(fields: [userId], references: [id])
}

// locations are where you're checking-in from (e.g. a bar, a distillery)
// model Location {
//     id   Int    @id @default(autoincrement())
//     name String
// }
