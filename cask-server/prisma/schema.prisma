datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

model User {
    id          Int     @id @default(autoincrement())
    email       String  @unique
    displayName String?

    checkins   Checkin[]
    identities Identity[]
}

enum IdentityProvider {
    google
}

model Identity {
    id Int @id @default(autoincrement())

    provider   IdentityProvider
    externalId String

    userId Int
    User   User @relation(fields: [userId], references: [id])

    @@unique([provider, externalId])
}

model Producer {
    id      Int      @id @default(autoincrement())
    name    String
    country String
    Region  String?
    Bottle  Bottle[]
}

enum Category {
    blend
    blended_malt
    single_malt
    spirit
}

// e.g. Suntory Whisky
model Bottler {
    id     Int      @id @default(autoincrement())
    name   String
    Bottle Bottle[]
}

// e.g. Hibiki
model Brand {
    id     Int      @id @default(autoincrement())
    name   String
    Bottle Bottle[]
}

// DisplayName is: [Brand] [Name] [Series]
// if Brand is empty it uses the Producer instead and is considered their base
// Producer=Hibiki Brand=Hibiki, Name=12, Series=None, DisplayName=Hibiki 12
// Producer=Macallan, Brand=Blended Malt, Series=Mythic Journey, DisplayName=Macallan Blended Malt Mythic Journey
model Bottle {
    id         Int       @id @default(autoincrement())
    name       String
    brandId    Int?
    brand      Brand?    @relation(fields: [brandId], references: [id])
    bottlerId  Int?
    bottler    Bottler?  @relation(fields: [bottlerId], references: [id])
    producerId Int?
    producer   Producer? @relation(fields: [producerId], references: [id])
    category   Category?

    abv       Float?
    stagedAge Int?

    vintageYear Int?
    bottleYear  Int?

    series String?

    caskType   String?
    caskNumber String?

    totalBottles Int?
    mashBill     MashBill?
    Checkin      Checkin[]
}

model MashBill {
    id Int @id @default(autoincrement())

    bottleId Int    @unique
    bottle   Bottle @relation(fields: [bottleId], references: [id])

    barley Float
    corn   Float
    rye    Float
    wheat  Float
}

model Checkin {
    id       Int    @id @default(autoincrement())
    bottleId Int
    bottle   Bottle @relation(fields: [bottleId], references: [id])
    // location

    tastingNotes String?
    tags         String[]
    // friends      String[]
    rating       Float
    userId       Int
    user         User     @relation(fields: [userId], references: [id])
}

// locations are where you're checking-in from (e.g. a bar, a distillery)
// model Location {
//     id   Int    @id @default(autoincrement())
//     name String
// }
