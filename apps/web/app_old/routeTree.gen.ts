/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as UpdatesImport } from './routes/updates'
import { Route as SettingsImport } from './routes/settings'
import { Route as SearchImport } from './routes/search'
import { Route as NotificationsImport } from './routes/notifications'
import { Route as LogoutImport } from './routes/logout'
import { Route as LoginImport } from './routes/login'
import { Route as FriendsImport } from './routes/friends'
import { Route as FavoritesImport } from './routes/favorites'
import { Route as AdminImport } from './routes/admin'
import { Route as AddFlightImport } from './routes/addFlight'
import { Route as AddEntityImport } from './routes/addEntity'
import { Route as AddBottleImport } from './routes/addBottle'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/_index'
import { Route as healthImport } from './routes/[_health]'
import { Route as UsersUsernameImport } from './routes/users.$username'
import { Route as TastingsTastingIdImport } from './routes/tastings.$tastingId'
import { Route as FlightsIndexImport } from './routes/flights._index'
import { Route as FlightsFlightIdImport } from './routes/flights.$flightId'
import { Route as EntitiesIndexImport } from './routes/entities._index'
import { Route as EntitiesEntityIdImport } from './routes/entities.$entityId'
import { Route as BottlesIndexImport } from './routes/bottles._index'
import { Route as BottlesBottleIdImport } from './routes/bottles.$bottleId'
import { Route as AdminUsersImport } from './routes/admin.users'
import { Route as AdminTagsImport } from './routes/admin.tags'
import { Route as AdminSitesImport } from './routes/admin.sites'
import { Route as AdminBadgesImport } from './routes/admin.badges'
import { Route as AdminIndexImport } from './routes/admin._index'
import { Route as UsersUsernameFavoritesImport } from './routes/users.$username.favorites'
import { Route as UsersUsernameIndexImport } from './routes/users.$username._index'
import { Route as TastingsTastingIdEditImageImport } from './routes/tastings.$tastingId_.editImage'
import { Route as TastingsTastingIdEditImport } from './routes/tastings.$tastingId_.edit'
import { Route as ResourcesManifestwebmanifestImport } from './routes/resources.manifest[.]webmanifest'
import { Route as FlightsFlightIdOverlayImport } from './routes/flights.$flightId_.overlay'
import { Route as FlightsFlightIdEditImport } from './routes/flights.$flightId_.edit'
import { Route as EntitiesEntityIdMergeImport } from './routes/entities.$entityId_.merge'
import { Route as EntitiesEntityIdEditImport } from './routes/entities.$entityId_.edit'
import { Route as EntitiesEntityIdAliasesImport } from './routes/entities.$entityId_.aliases'
import { Route as EntitiesEntityIdTastingsImport } from './routes/entities.$entityId.tastings'
import { Route as EntitiesEntityIdBottlesImport } from './routes/entities.$entityId.bottles'
import { Route as EntitiesEntityIdIndexImport } from './routes/entities.$entityId._index'
import { Route as BottlesBottleIdMergeImport } from './routes/bottles.$bottleId_.merge'
import { Route as BottlesBottleIdEditImport } from './routes/bottles.$bottleId_.edit'
import { Route as BottlesBottleIdAliasesImport } from './routes/bottles.$bottleId_.aliases'
import { Route as BottlesBottleIdAddTastingImport } from './routes/bottles.$bottleId_.addTasting'
import { Route as BottlesBottleIdTastingsImport } from './routes/bottles.$bottleId.tastings'
import { Route as BottlesBottleIdPricesImport } from './routes/bottles.$bottleId.prices'
import { Route as BottlesBottleIdIndexImport } from './routes/bottles.$bottleId._index'
import { Route as AdminTagsAddImport } from './routes/admin_.tags_.add'
import { Route as AdminSitesAddImport } from './routes/admin_.sites_.add'
import { Route as AdminUsersIndexImport } from './routes/admin.users._index'
import { Route as AdminTagsIndexImport } from './routes/admin.tags._index'
import { Route as AdminTagsTagIdImport } from './routes/admin.tags.$tagId'
import { Route as AdminSitesIndexImport } from './routes/admin.sites._index'
import { Route as AdminSitesSiteIdImport } from './routes/admin.sites.$siteId'
import { Route as AdminBadgesIndexImport } from './routes/admin.badges._index'
import { Route as AdminTagsTagIdEditImport } from './routes/admin_.tags_.$tagId_.edit'
import { Route as AdminSitesSiteIdEditImport } from './routes/admin_.sites_.$siteId_.edit'
import { Route as AdminSitesSiteIdReviewsImport } from './routes/admin.sites.$siteId.reviews'
import { Route as AdminSitesSiteIdIndexImport } from './routes/admin.sites.$siteId._index'

// Create Virtual Routes

const FlightsImport = createFileRoute('/flights')()
const EntitiesImport = createFileRoute('/entities')()
const BottlesImport = createFileRoute('/bottles')()

// Create/Update Routes

const FlightsRoute = FlightsImport.update({
  path: '/flights',
  getParentRoute: () => rootRoute,
} as any)

const EntitiesRoute = EntitiesImport.update({
  path: '/entities',
  getParentRoute: () => rootRoute,
} as any)

const BottlesRoute = BottlesImport.update({
  path: '/bottles',
  getParentRoute: () => rootRoute,
} as any)

const UpdatesRoute = UpdatesImport.update({
  path: '/updates',
  getParentRoute: () => rootRoute,
} as any)

const SettingsRoute = SettingsImport.update({
  path: '/settings',
  getParentRoute: () => rootRoute,
} as any)

const SearchRoute = SearchImport.update({
  path: '/search',
  getParentRoute: () => rootRoute,
} as any)

const NotificationsRoute = NotificationsImport.update({
  path: '/notifications',
  getParentRoute: () => rootRoute,
} as any)

const LogoutRoute = LogoutImport.update({
  path: '/logout',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const FriendsRoute = FriendsImport.update({
  path: '/friends',
  getParentRoute: () => rootRoute,
} as any)

const FavoritesRoute = FavoritesImport.update({
  path: '/favorites',
  getParentRoute: () => rootRoute,
} as any)

const AdminRoute = AdminImport.update({
  path: '/admin',
  getParentRoute: () => rootRoute,
} as any)

const AddFlightRoute = AddFlightImport.update({
  path: '/addFlight',
  getParentRoute: () => rootRoute,
} as any)

const AddEntityRoute = AddEntityImport.update({
  path: '/addEntity',
  getParentRoute: () => rootRoute,
} as any)

const AddBottleRoute = AddBottleImport.update({
  path: '/addBottle',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/_index',
  getParentRoute: () => rootRoute,
} as any)

const healthRoute = healthImport.update({
  path: '/[_health]',
  getParentRoute: () => rootRoute,
} as any)

const UsersUsernameRoute = UsersUsernameImport.update({
  path: '/users/$username',
  getParentRoute: () => rootRoute,
} as any)

const TastingsTastingIdRoute = TastingsTastingIdImport.update({
  path: '/tastings/$tastingId',
  getParentRoute: () => rootRoute,
} as any)

const FlightsIndexRoute = FlightsIndexImport.update({
  id: '/_index',
  getParentRoute: () => FlightsRoute,
} as any)

const FlightsFlightIdRoute = FlightsFlightIdImport.update({
  path: '/flights/$flightId',
  getParentRoute: () => rootRoute,
} as any)

const EntitiesIndexRoute = EntitiesIndexImport.update({
  id: '/_index',
  getParentRoute: () => EntitiesRoute,
} as any)

const EntitiesEntityIdRoute = EntitiesEntityIdImport.update({
  path: '/entities/$entityId',
  getParentRoute: () => rootRoute,
} as any)

const BottlesIndexRoute = BottlesIndexImport.update({
  id: '/_index',
  getParentRoute: () => BottlesRoute,
} as any)

const BottlesBottleIdRoute = BottlesBottleIdImport.update({
  path: '/bottles/$bottleId',
  getParentRoute: () => rootRoute,
} as any)

const AdminUsersRoute = AdminUsersImport.update({
  path: '/users',
  getParentRoute: () => AdminRoute,
} as any)

const AdminTagsRoute = AdminTagsImport.update({
  path: '/tags',
  getParentRoute: () => AdminRoute,
} as any)

const AdminSitesRoute = AdminSitesImport.update({
  path: '/sites',
  getParentRoute: () => AdminRoute,
} as any)

const AdminBadgesRoute = AdminBadgesImport.update({
  path: '/badges',
  getParentRoute: () => AdminRoute,
} as any)

const AdminIndexRoute = AdminIndexImport.update({
  id: '/_index',
  getParentRoute: () => AdminRoute,
} as any)

const UsersUsernameFavoritesRoute = UsersUsernameFavoritesImport.update({
  path: '/favorites',
  getParentRoute: () => UsersUsernameRoute,
} as any)

const UsersUsernameIndexRoute = UsersUsernameIndexImport.update({
  id: '/_index',
  getParentRoute: () => UsersUsernameRoute,
} as any)

const TastingsTastingIdEditImageRoute = TastingsTastingIdEditImageImport.update(
  {
    path: '/tastings/$tastingId/editImage',
    getParentRoute: () => rootRoute,
  } as any,
)

const TastingsTastingIdEditRoute = TastingsTastingIdEditImport.update({
  path: '/tastings/$tastingId/edit',
  getParentRoute: () => rootRoute,
} as any)

const ResourcesManifestwebmanifestRoute =
  ResourcesManifestwebmanifestImport.update({
    path: '/resources/manifest[/]webmanifest',
    getParentRoute: () => rootRoute,
  } as any)

const FlightsFlightIdOverlayRoute = FlightsFlightIdOverlayImport.update({
  path: '/$flightId/overlay',
  getParentRoute: () => FlightsRoute,
} as any)

const FlightsFlightIdEditRoute = FlightsFlightIdEditImport.update({
  path: '/$flightId/edit',
  getParentRoute: () => FlightsRoute,
} as any)

const EntitiesEntityIdMergeRoute = EntitiesEntityIdMergeImport.update({
  path: '/$entityId/merge',
  getParentRoute: () => EntitiesRoute,
} as any)

const EntitiesEntityIdEditRoute = EntitiesEntityIdEditImport.update({
  path: '/$entityId/edit',
  getParentRoute: () => EntitiesRoute,
} as any)

const EntitiesEntityIdAliasesRoute = EntitiesEntityIdAliasesImport.update({
  path: '/$entityId/aliases',
  getParentRoute: () => EntitiesRoute,
} as any)

const EntitiesEntityIdTastingsRoute = EntitiesEntityIdTastingsImport.update({
  path: '/tastings',
  getParentRoute: () => EntitiesEntityIdRoute,
} as any)

const EntitiesEntityIdBottlesRoute = EntitiesEntityIdBottlesImport.update({
  path: '/bottles',
  getParentRoute: () => EntitiesEntityIdRoute,
} as any)

const EntitiesEntityIdIndexRoute = EntitiesEntityIdIndexImport.update({
  id: '/_index',
  getParentRoute: () => EntitiesEntityIdRoute,
} as any)

const BottlesBottleIdMergeRoute = BottlesBottleIdMergeImport.update({
  path: '/$bottleId/merge',
  getParentRoute: () => BottlesRoute,
} as any)

const BottlesBottleIdEditRoute = BottlesBottleIdEditImport.update({
  path: '/$bottleId/edit',
  getParentRoute: () => BottlesRoute,
} as any)

const BottlesBottleIdAliasesRoute = BottlesBottleIdAliasesImport.update({
  path: '/$bottleId/aliases',
  getParentRoute: () => BottlesRoute,
} as any)

const BottlesBottleIdAddTastingRoute = BottlesBottleIdAddTastingImport.update({
  path: '/$bottleId/addTasting',
  getParentRoute: () => BottlesRoute,
} as any)

const BottlesBottleIdTastingsRoute = BottlesBottleIdTastingsImport.update({
  path: '/tastings',
  getParentRoute: () => BottlesBottleIdRoute,
} as any)

const BottlesBottleIdPricesRoute = BottlesBottleIdPricesImport.update({
  path: '/prices',
  getParentRoute: () => BottlesBottleIdRoute,
} as any)

const BottlesBottleIdIndexRoute = BottlesBottleIdIndexImport.update({
  id: '/_index',
  getParentRoute: () => BottlesBottleIdRoute,
} as any)

const AdminTagsAddRoute = AdminTagsAddImport.update({
  path: '/admin/tags/add',
  getParentRoute: () => rootRoute,
} as any)

const AdminSitesAddRoute = AdminSitesAddImport.update({
  path: '/admin/sites/add',
  getParentRoute: () => rootRoute,
} as any)

const AdminUsersIndexRoute = AdminUsersIndexImport.update({
  id: '/_index',
  getParentRoute: () => AdminUsersRoute,
} as any)

const AdminTagsIndexRoute = AdminTagsIndexImport.update({
  id: '/_index',
  getParentRoute: () => AdminTagsRoute,
} as any)

const AdminTagsTagIdRoute = AdminTagsTagIdImport.update({
  path: '/$tagId',
  getParentRoute: () => AdminTagsRoute,
} as any)

const AdminSitesIndexRoute = AdminSitesIndexImport.update({
  id: '/_index',
  getParentRoute: () => AdminSitesRoute,
} as any)

const AdminSitesSiteIdRoute = AdminSitesSiteIdImport.update({
  path: '/$siteId',
  getParentRoute: () => AdminSitesRoute,
} as any)

const AdminBadgesIndexRoute = AdminBadgesIndexImport.update({
  id: '/_index',
  getParentRoute: () => AdminBadgesRoute,
} as any)

const AdminTagsTagIdEditRoute = AdminTagsTagIdEditImport.update({
  path: '/admin/tags/$tagId/edit',
  getParentRoute: () => rootRoute,
} as any)

const AdminSitesSiteIdEditRoute = AdminSitesSiteIdEditImport.update({
  path: '/admin/sites/$siteId/edit',
  getParentRoute: () => rootRoute,
} as any)

const AdminSitesSiteIdReviewsRoute = AdminSitesSiteIdReviewsImport.update({
  path: '/reviews',
  getParentRoute: () => AdminSitesSiteIdRoute,
} as any)

const AdminSitesSiteIdIndexRoute = AdminSitesSiteIdIndexImport.update({
  id: '/_index',
  getParentRoute: () => AdminSitesSiteIdRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/[_health]': {
      id: '/[_health]'
      path: '/[_health]'
      fullPath: '/[_health]'
      preLoaderRoute: typeof healthImport
      parentRoute: typeof rootRoute
    }
    '/_index': {
      id: '/_index'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/addBottle': {
      id: '/addBottle'
      path: '/addBottle'
      fullPath: '/addBottle'
      preLoaderRoute: typeof AddBottleImport
      parentRoute: typeof rootRoute
    }
    '/addEntity': {
      id: '/addEntity'
      path: '/addEntity'
      fullPath: '/addEntity'
      preLoaderRoute: typeof AddEntityImport
      parentRoute: typeof rootRoute
    }
    '/addFlight': {
      id: '/addFlight'
      path: '/addFlight'
      fullPath: '/addFlight'
      preLoaderRoute: typeof AddFlightImport
      parentRoute: typeof rootRoute
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminImport
      parentRoute: typeof rootRoute
    }
    '/favorites': {
      id: '/favorites'
      path: '/favorites'
      fullPath: '/favorites'
      preLoaderRoute: typeof FavoritesImport
      parentRoute: typeof rootRoute
    }
    '/friends': {
      id: '/friends'
      path: '/friends'
      fullPath: '/friends'
      preLoaderRoute: typeof FriendsImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/logout': {
      id: '/logout'
      path: '/logout'
      fullPath: '/logout'
      preLoaderRoute: typeof LogoutImport
      parentRoute: typeof rootRoute
    }
    '/notifications': {
      id: '/notifications'
      path: '/notifications'
      fullPath: '/notifications'
      preLoaderRoute: typeof NotificationsImport
      parentRoute: typeof rootRoute
    }
    '/search': {
      id: '/search'
      path: '/search'
      fullPath: '/search'
      preLoaderRoute: typeof SearchImport
      parentRoute: typeof rootRoute
    }
    '/settings': {
      id: '/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsImport
      parentRoute: typeof rootRoute
    }
    '/updates': {
      id: '/updates'
      path: '/updates'
      fullPath: '/updates'
      preLoaderRoute: typeof UpdatesImport
      parentRoute: typeof rootRoute
    }
    '/admin/_index': {
      id: '/admin/_index'
      path: ''
      fullPath: '/admin'
      preLoaderRoute: typeof AdminIndexImport
      parentRoute: typeof AdminImport
    }
    '/admin/badges': {
      id: '/admin/badges'
      path: '/badges'
      fullPath: '/admin/badges'
      preLoaderRoute: typeof AdminBadgesImport
      parentRoute: typeof AdminImport
    }
    '/admin/sites': {
      id: '/admin/sites'
      path: '/sites'
      fullPath: '/admin/sites'
      preLoaderRoute: typeof AdminSitesImport
      parentRoute: typeof AdminImport
    }
    '/admin/tags': {
      id: '/admin/tags'
      path: '/tags'
      fullPath: '/admin/tags'
      preLoaderRoute: typeof AdminTagsImport
      parentRoute: typeof AdminImport
    }
    '/admin/users': {
      id: '/admin/users'
      path: '/users'
      fullPath: '/admin/users'
      preLoaderRoute: typeof AdminUsersImport
      parentRoute: typeof AdminImport
    }
    '/bottles/$bottleId': {
      id: '/bottles/$bottleId'
      path: '/bottles/$bottleId'
      fullPath: '/bottles/$bottleId'
      preLoaderRoute: typeof BottlesBottleIdImport
      parentRoute: typeof rootRoute
    }
    '/bottles': {
      id: '/bottles'
      path: '/bottles'
      fullPath: '/bottles'
      preLoaderRoute: typeof BottlesImport
      parentRoute: typeof rootRoute
    }
    '/bottles/_index': {
      id: '/bottles/_index'
      path: '/bottles'
      fullPath: '/bottles'
      preLoaderRoute: typeof BottlesIndexImport
      parentRoute: typeof BottlesRoute
    }
    '/entities/$entityId': {
      id: '/entities/$entityId'
      path: '/entities/$entityId'
      fullPath: '/entities/$entityId'
      preLoaderRoute: typeof EntitiesEntityIdImport
      parentRoute: typeof rootRoute
    }
    '/entities': {
      id: '/entities'
      path: '/entities'
      fullPath: '/entities'
      preLoaderRoute: typeof EntitiesImport
      parentRoute: typeof rootRoute
    }
    '/entities/_index': {
      id: '/entities/_index'
      path: '/entities'
      fullPath: '/entities'
      preLoaderRoute: typeof EntitiesIndexImport
      parentRoute: typeof EntitiesRoute
    }
    '/flights/$flightId': {
      id: '/flights/$flightId'
      path: '/flights/$flightId'
      fullPath: '/flights/$flightId'
      preLoaderRoute: typeof FlightsFlightIdImport
      parentRoute: typeof rootRoute
    }
    '/flights': {
      id: '/flights'
      path: '/flights'
      fullPath: '/flights'
      preLoaderRoute: typeof FlightsImport
      parentRoute: typeof rootRoute
    }
    '/flights/_index': {
      id: '/flights/_index'
      path: '/flights'
      fullPath: '/flights'
      preLoaderRoute: typeof FlightsIndexImport
      parentRoute: typeof FlightsRoute
    }
    '/tastings/$tastingId': {
      id: '/tastings/$tastingId'
      path: '/tastings/$tastingId'
      fullPath: '/tastings/$tastingId'
      preLoaderRoute: typeof TastingsTastingIdImport
      parentRoute: typeof rootRoute
    }
    '/users/$username': {
      id: '/users/$username'
      path: '/users/$username'
      fullPath: '/users/$username'
      preLoaderRoute: typeof UsersUsernameImport
      parentRoute: typeof rootRoute
    }
    '/admin/badges/_index': {
      id: '/admin/badges/_index'
      path: ''
      fullPath: '/admin/badges'
      preLoaderRoute: typeof AdminBadgesIndexImport
      parentRoute: typeof AdminBadgesImport
    }
    '/admin/sites/$siteId': {
      id: '/admin/sites/$siteId'
      path: '/$siteId'
      fullPath: '/admin/sites/$siteId'
      preLoaderRoute: typeof AdminSitesSiteIdImport
      parentRoute: typeof AdminSitesImport
    }
    '/admin/sites/_index': {
      id: '/admin/sites/_index'
      path: ''
      fullPath: '/admin/sites'
      preLoaderRoute: typeof AdminSitesIndexImport
      parentRoute: typeof AdminSitesImport
    }
    '/admin/tags/$tagId': {
      id: '/admin/tags/$tagId'
      path: '/$tagId'
      fullPath: '/admin/tags/$tagId'
      preLoaderRoute: typeof AdminTagsTagIdImport
      parentRoute: typeof AdminTagsImport
    }
    '/admin/tags/_index': {
      id: '/admin/tags/_index'
      path: ''
      fullPath: '/admin/tags'
      preLoaderRoute: typeof AdminTagsIndexImport
      parentRoute: typeof AdminTagsImport
    }
    '/admin/users/_index': {
      id: '/admin/users/_index'
      path: ''
      fullPath: '/admin/users'
      preLoaderRoute: typeof AdminUsersIndexImport
      parentRoute: typeof AdminUsersImport
    }
    '/admin/sites/add': {
      id: '/admin/sites/add'
      path: '/admin/sites/add'
      fullPath: '/admin/sites/add'
      preLoaderRoute: typeof AdminSitesAddImport
      parentRoute: typeof rootRoute
    }
    '/admin/tags/add': {
      id: '/admin/tags/add'
      path: '/admin/tags/add'
      fullPath: '/admin/tags/add'
      preLoaderRoute: typeof AdminTagsAddImport
      parentRoute: typeof rootRoute
    }
    '/bottles/$bottleId/_index': {
      id: '/bottles/$bottleId/_index'
      path: ''
      fullPath: '/bottles/$bottleId'
      preLoaderRoute: typeof BottlesBottleIdIndexImport
      parentRoute: typeof BottlesBottleIdImport
    }
    '/bottles/$bottleId/prices': {
      id: '/bottles/$bottleId/prices'
      path: '/prices'
      fullPath: '/bottles/$bottleId/prices'
      preLoaderRoute: typeof BottlesBottleIdPricesImport
      parentRoute: typeof BottlesBottleIdImport
    }
    '/bottles/$bottleId/tastings': {
      id: '/bottles/$bottleId/tastings'
      path: '/tastings'
      fullPath: '/bottles/$bottleId/tastings'
      preLoaderRoute: typeof BottlesBottleIdTastingsImport
      parentRoute: typeof BottlesBottleIdImport
    }
    '/bottles/$bottleId/addTasting': {
      id: '/bottles/$bottleId/addTasting'
      path: '/$bottleId/addTasting'
      fullPath: '/bottles/$bottleId/addTasting'
      preLoaderRoute: typeof BottlesBottleIdAddTastingImport
      parentRoute: typeof BottlesImport
    }
    '/bottles/$bottleId/aliases': {
      id: '/bottles/$bottleId/aliases'
      path: '/$bottleId/aliases'
      fullPath: '/bottles/$bottleId/aliases'
      preLoaderRoute: typeof BottlesBottleIdAliasesImport
      parentRoute: typeof BottlesImport
    }
    '/bottles/$bottleId/edit': {
      id: '/bottles/$bottleId/edit'
      path: '/$bottleId/edit'
      fullPath: '/bottles/$bottleId/edit'
      preLoaderRoute: typeof BottlesBottleIdEditImport
      parentRoute: typeof BottlesImport
    }
    '/bottles/$bottleId/merge': {
      id: '/bottles/$bottleId/merge'
      path: '/$bottleId/merge'
      fullPath: '/bottles/$bottleId/merge'
      preLoaderRoute: typeof BottlesBottleIdMergeImport
      parentRoute: typeof BottlesImport
    }
    '/entities/$entityId/_index': {
      id: '/entities/$entityId/_index'
      path: ''
      fullPath: '/entities/$entityId'
      preLoaderRoute: typeof EntitiesEntityIdIndexImport
      parentRoute: typeof EntitiesEntityIdImport
    }
    '/entities/$entityId/bottles': {
      id: '/entities/$entityId/bottles'
      path: '/bottles'
      fullPath: '/entities/$entityId/bottles'
      preLoaderRoute: typeof EntitiesEntityIdBottlesImport
      parentRoute: typeof EntitiesEntityIdImport
    }
    '/entities/$entityId/tastings': {
      id: '/entities/$entityId/tastings'
      path: '/tastings'
      fullPath: '/entities/$entityId/tastings'
      preLoaderRoute: typeof EntitiesEntityIdTastingsImport
      parentRoute: typeof EntitiesEntityIdImport
    }
    '/entities/$entityId/aliases': {
      id: '/entities/$entityId/aliases'
      path: '/$entityId/aliases'
      fullPath: '/entities/$entityId/aliases'
      preLoaderRoute: typeof EntitiesEntityIdAliasesImport
      parentRoute: typeof EntitiesImport
    }
    '/entities/$entityId/edit': {
      id: '/entities/$entityId/edit'
      path: '/$entityId/edit'
      fullPath: '/entities/$entityId/edit'
      preLoaderRoute: typeof EntitiesEntityIdEditImport
      parentRoute: typeof EntitiesImport
    }
    '/entities/$entityId/merge': {
      id: '/entities/$entityId/merge'
      path: '/$entityId/merge'
      fullPath: '/entities/$entityId/merge'
      preLoaderRoute: typeof EntitiesEntityIdMergeImport
      parentRoute: typeof EntitiesImport
    }
    '/flights/$flightId/edit': {
      id: '/flights/$flightId/edit'
      path: '/$flightId/edit'
      fullPath: '/flights/$flightId/edit'
      preLoaderRoute: typeof FlightsFlightIdEditImport
      parentRoute: typeof FlightsImport
    }
    '/flights/$flightId/overlay': {
      id: '/flights/$flightId/overlay'
      path: '/$flightId/overlay'
      fullPath: '/flights/$flightId/overlay'
      preLoaderRoute: typeof FlightsFlightIdOverlayImport
      parentRoute: typeof FlightsImport
    }
    '/resources/manifest[/]webmanifest': {
      id: '/resources/manifest[/]webmanifest'
      path: '/resources/manifest[/]webmanifest'
      fullPath: '/resources/manifest[/]webmanifest'
      preLoaderRoute: typeof ResourcesManifestwebmanifestImport
      parentRoute: typeof rootRoute
    }
    '/tastings/$tastingId/edit': {
      id: '/tastings/$tastingId/edit'
      path: '/tastings/$tastingId/edit'
      fullPath: '/tastings/$tastingId/edit'
      preLoaderRoute: typeof TastingsTastingIdEditImport
      parentRoute: typeof rootRoute
    }
    '/tastings/$tastingId/editImage': {
      id: '/tastings/$tastingId/editImage'
      path: '/tastings/$tastingId/editImage'
      fullPath: '/tastings/$tastingId/editImage'
      preLoaderRoute: typeof TastingsTastingIdEditImageImport
      parentRoute: typeof rootRoute
    }
    '/users/$username/_index': {
      id: '/users/$username/_index'
      path: ''
      fullPath: '/users/$username'
      preLoaderRoute: typeof UsersUsernameIndexImport
      parentRoute: typeof UsersUsernameImport
    }
    '/users/$username/favorites': {
      id: '/users/$username/favorites'
      path: '/favorites'
      fullPath: '/users/$username/favorites'
      preLoaderRoute: typeof UsersUsernameFavoritesImport
      parentRoute: typeof UsersUsernameImport
    }
    '/admin/sites/$siteId/_index': {
      id: '/admin/sites/$siteId/_index'
      path: ''
      fullPath: '/admin/sites/$siteId'
      preLoaderRoute: typeof AdminSitesSiteIdIndexImport
      parentRoute: typeof AdminSitesSiteIdImport
    }
    '/admin/sites/$siteId/reviews': {
      id: '/admin/sites/$siteId/reviews'
      path: '/reviews'
      fullPath: '/admin/sites/$siteId/reviews'
      preLoaderRoute: typeof AdminSitesSiteIdReviewsImport
      parentRoute: typeof AdminSitesSiteIdImport
    }
    '/admin/sites/$siteId/edit': {
      id: '/admin/sites/$siteId/edit'
      path: '/admin/sites/$siteId/edit'
      fullPath: '/admin/sites/$siteId/edit'
      preLoaderRoute: typeof AdminSitesSiteIdEditImport
      parentRoute: typeof rootRoute
    }
    '/admin/tags/$tagId/edit': {
      id: '/admin/tags/$tagId/edit'
      path: '/admin/tags/$tagId/edit'
      fullPath: '/admin/tags/$tagId/edit'
      preLoaderRoute: typeof AdminTagsTagIdEditImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  healthRoute,
  AboutRoute,
  AddBottleRoute,
  AddEntityRoute,
  AddFlightRoute,
  AdminRoute: AdminRoute.addChildren({
    AdminBadgesRoute: AdminBadgesRoute.addChildren({}),
    AdminSitesRoute: AdminSitesRoute.addChildren({
      AdminSitesSiteIdRoute: AdminSitesSiteIdRoute.addChildren({
        AdminSitesSiteIdReviewsRoute,
      }),
    }),
    AdminTagsRoute: AdminTagsRoute.addChildren({ AdminTagsTagIdRoute }),
    AdminUsersRoute: AdminUsersRoute.addChildren({}),
  }),
  FavoritesRoute,
  FriendsRoute,
  LoginRoute,
  LogoutRoute,
  NotificationsRoute,
  SearchRoute,
  SettingsRoute,
  UpdatesRoute,
  BottlesBottleIdRoute: BottlesBottleIdRoute.addChildren({
    BottlesBottleIdPricesRoute,
    BottlesBottleIdTastingsRoute,
  }),
  BottlesRoute: BottlesRoute.addChildren({
    BottlesBottleIdAddTastingRoute,
    BottlesBottleIdAliasesRoute,
    BottlesBottleIdEditRoute,
    BottlesBottleIdMergeRoute,
  }),
  EntitiesEntityIdRoute: EntitiesEntityIdRoute.addChildren({
    EntitiesEntityIdBottlesRoute,
    EntitiesEntityIdTastingsRoute,
  }),
  EntitiesRoute: EntitiesRoute.addChildren({
    EntitiesEntityIdAliasesRoute,
    EntitiesEntityIdEditRoute,
    EntitiesEntityIdMergeRoute,
  }),
  FlightsFlightIdRoute,
  FlightsRoute: FlightsRoute.addChildren({
    FlightsFlightIdEditRoute,
    FlightsFlightIdOverlayRoute,
  }),
  TastingsTastingIdRoute,
  UsersUsernameRoute: UsersUsernameRoute.addChildren({
    UsersUsernameFavoritesRoute,
  }),
  AdminSitesAddRoute,
  AdminTagsAddRoute,
  ResourcesManifestwebmanifestRoute,
  TastingsTastingIdEditRoute,
  TastingsTastingIdEditImageRoute,
  AdminSitesSiteIdEditRoute,
  AdminTagsTagIdEditRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "children": [
        "/[_health]",
        "/_index",
        "/about",
        "/addBottle",
        "/addEntity",
        "/addFlight",
        "/admin",
        "/favorites",
        "/friends",
        "/login",
        "/logout",
        "/notifications",
        "/search",
        "/settings",
        "/updates",
        "/bottles/$bottleId",
        "/bottles",
        "/entities/$entityId",
        "/entities",
        "/flights/$flightId",
        "/flights",
        "/tastings/$tastingId",
        "/users/$username",
        "/admin/sites/add",
        "/admin/tags/add",
        "/resources/manifest[/]webmanifest",
        "/tastings/$tastingId/edit",
        "/tastings/$tastingId/editImage",
        "/admin/sites/$siteId/edit",
        "/admin/tags/$tagId/edit"
      ]
    },
    "/[_health]": {
      "filePath": "[_health].tsx"
    },
    "/_index": {
      "filePath": "_index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/addBottle": {
      "filePath": "addBottle.tsx"
    },
    "/addEntity": {
      "filePath": "addEntity.tsx"
    },
    "/addFlight": {
      "filePath": "addFlight.tsx"
    },
    "/admin": {
      "filePath": "admin.tsx",
      "children": [
        "/admin/_index",
        "/admin/badges",
        "/admin/sites",
        "/admin/tags",
        "/admin/users"
      ]
    },
    "/favorites": {
      "filePath": "favorites.tsx"
    },
    "/friends": {
      "filePath": "friends.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/logout": {
      "filePath": "logout.tsx"
    },
    "/notifications": {
      "filePath": "notifications.tsx"
    },
    "/search": {
      "filePath": "search.tsx"
    },
    "/settings": {
      "filePath": "settings.tsx"
    },
    "/updates": {
      "filePath": "updates.tsx"
    },
    "/admin/_index": {
      "filePath": "admin._index.tsx",
      "parent": "/admin"
    },
    "/admin/badges": {
      "filePath": "admin.badges.tsx",
      "parent": "/admin",
      "children": [
        "/admin/badges/_index"
      ]
    },
    "/admin/sites": {
      "filePath": "admin.sites.tsx",
      "parent": "/admin",
      "children": [
        "/admin/sites/$siteId",
        "/admin/sites/_index"
      ]
    },
    "/admin/tags": {
      "filePath": "admin.tags.tsx",
      "parent": "/admin",
      "children": [
        "/admin/tags/$tagId",
        "/admin/tags/_index"
      ]
    },
    "/admin/users": {
      "filePath": "admin.users.tsx",
      "parent": "/admin",
      "children": [
        "/admin/users/_index"
      ]
    },
    "/bottles/$bottleId": {
      "filePath": "bottles.$bottleId.tsx",
      "children": [
        "/bottles/$bottleId/_index",
        "/bottles/$bottleId/prices",
        "/bottles/$bottleId/tastings"
      ]
    },
    "/bottles": {
      "filePath": "/",
      "children": [
        "/bottles/_index",
        "/bottles/$bottleId/addTasting",
        "/bottles/$bottleId/aliases",
        "/bottles/$bottleId/edit",
        "/bottles/$bottleId/merge"
      ]
    },
    "/bottles/_index": {
      "filePath": "bottles._index.tsx",
      "parent": "/bottles"
    },
    "/entities/$entityId": {
      "filePath": "entities.$entityId.tsx",
      "children": [
        "/entities/$entityId/_index",
        "/entities/$entityId/bottles",
        "/entities/$entityId/tastings"
      ]
    },
    "/entities": {
      "filePath": "/",
      "children": [
        "/entities/_index",
        "/entities/$entityId/aliases",
        "/entities/$entityId/edit",
        "/entities/$entityId/merge"
      ]
    },
    "/entities/_index": {
      "filePath": "entities._index.tsx",
      "parent": "/entities"
    },
    "/flights/$flightId": {
      "filePath": "flights.$flightId.tsx"
    },
    "/flights": {
      "filePath": "/",
      "children": [
        "/flights/_index",
        "/flights/$flightId/edit",
        "/flights/$flightId/overlay"
      ]
    },
    "/flights/_index": {
      "filePath": "flights._index.tsx",
      "parent": "/flights"
    },
    "/tastings/$tastingId": {
      "filePath": "tastings.$tastingId.tsx"
    },
    "/users/$username": {
      "filePath": "users.$username.tsx",
      "children": [
        "/users/$username/_index",
        "/users/$username/favorites"
      ]
    },
    "/admin/badges/_index": {
      "filePath": "admin.badges._index.tsx",
      "parent": "/admin/badges"
    },
    "/admin/sites/$siteId": {
      "filePath": "admin.sites.$siteId.tsx",
      "parent": "/admin/sites",
      "children": [
        "/admin/sites/$siteId/_index",
        "/admin/sites/$siteId/reviews"
      ]
    },
    "/admin/sites/_index": {
      "filePath": "admin.sites._index.tsx",
      "parent": "/admin/sites"
    },
    "/admin/tags/$tagId": {
      "filePath": "admin.tags.$tagId.tsx",
      "parent": "/admin/tags"
    },
    "/admin/tags/_index": {
      "filePath": "admin.tags._index.tsx",
      "parent": "/admin/tags"
    },
    "/admin/users/_index": {
      "filePath": "admin.users._index.tsx",
      "parent": "/admin/users"
    },
    "/admin/sites/add": {
      "filePath": "admin_.sites_.add.tsx"
    },
    "/admin/tags/add": {
      "filePath": "admin_.tags_.add.tsx"
    },
    "/bottles/$bottleId/_index": {
      "filePath": "bottles.$bottleId._index.tsx",
      "parent": "/bottles/$bottleId"
    },
    "/bottles/$bottleId/prices": {
      "filePath": "bottles.$bottleId.prices.tsx",
      "parent": "/bottles/$bottleId"
    },
    "/bottles/$bottleId/tastings": {
      "filePath": "bottles.$bottleId.tastings.tsx",
      "parent": "/bottles/$bottleId"
    },
    "/bottles/$bottleId/addTasting": {
      "filePath": "bottles.$bottleId_.addTasting.tsx",
      "parent": "/bottles"
    },
    "/bottles/$bottleId/aliases": {
      "filePath": "bottles.$bottleId_.aliases.tsx",
      "parent": "/bottles"
    },
    "/bottles/$bottleId/edit": {
      "filePath": "bottles.$bottleId_.edit.tsx",
      "parent": "/bottles"
    },
    "/bottles/$bottleId/merge": {
      "filePath": "bottles.$bottleId_.merge.tsx",
      "parent": "/bottles"
    },
    "/entities/$entityId/_index": {
      "filePath": "entities.$entityId._index.tsx",
      "parent": "/entities/$entityId"
    },
    "/entities/$entityId/bottles": {
      "filePath": "entities.$entityId.bottles.tsx",
      "parent": "/entities/$entityId"
    },
    "/entities/$entityId/tastings": {
      "filePath": "entities.$entityId.tastings.tsx",
      "parent": "/entities/$entityId"
    },
    "/entities/$entityId/aliases": {
      "filePath": "entities.$entityId_.aliases.tsx",
      "parent": "/entities"
    },
    "/entities/$entityId/edit": {
      "filePath": "entities.$entityId_.edit.tsx",
      "parent": "/entities"
    },
    "/entities/$entityId/merge": {
      "filePath": "entities.$entityId_.merge.tsx",
      "parent": "/entities"
    },
    "/flights/$flightId/edit": {
      "filePath": "flights.$flightId_.edit.tsx",
      "parent": "/flights"
    },
    "/flights/$flightId/overlay": {
      "filePath": "flights.$flightId_.overlay.tsx",
      "parent": "/flights"
    },
    "/resources/manifest[/]webmanifest": {
      "filePath": "resources.manifest[.]webmanifest.ts"
    },
    "/tastings/$tastingId/edit": {
      "filePath": "tastings.$tastingId_.edit.tsx"
    },
    "/tastings/$tastingId/editImage": {
      "filePath": "tastings.$tastingId_.editImage.tsx"
    },
    "/users/$username/_index": {
      "filePath": "users.$username._index.tsx",
      "parent": "/users/$username"
    },
    "/users/$username/favorites": {
      "filePath": "users.$username.favorites.tsx",
      "parent": "/users/$username"
    },
    "/admin/sites/$siteId/_index": {
      "filePath": "admin.sites.$siteId._index.tsx",
      "parent": "/admin/sites/$siteId"
    },
    "/admin/sites/$siteId/reviews": {
      "filePath": "admin.sites.$siteId.reviews.tsx",
      "parent": "/admin/sites/$siteId"
    },
    "/admin/sites/$siteId/edit": {
      "filePath": "admin_.sites_.$siteId_.edit.tsx"
    },
    "/admin/tags/$tagId/edit": {
      "filePath": "admin_.tags_.$tagId_.edit.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
